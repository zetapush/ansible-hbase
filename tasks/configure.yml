---
- name: Setup group
  group: name={{hbase_group}} system=yes

- name: Setup user
  user: name={{hbase_user}} system=yes group={{hbase_group}}

- name: Create hbase root directory
  file: path={{hbase_root_dir}} state=directory owner={{hbase_user}} group={{hbase_group}} mode=755

- name: Create hbase Zookeeper root directory
  file: path={{hbase_zookeeper_data_dir}} state=directory owner={{hbase_user}} group={{hbase_group}} mode=755

- name: Uncompress the hbase tar
  unarchive: copy=no creates="{{hbase_root_dir}}/{{hbase_tarball_name}}" dest="{{hbase_root_dir}}" src="{{ download_tmp_dir }}/{{ hbase_tarball_name }}" owner="{{ hbase_user }}" group="{{ hbase_group }}"

- name: Link current version
  file: path={{hbase_current_dir}} state=link src={{hbase_dir}} owner="{{ hbase_user }}" group="{{ hbase_group }}"

- name: Create hbase log and local directories
  file: path={{item}} state=directory owner={{hbase_user}} group={{hbase_group}} mode=775
  with_items:
    - "{{hbase_local_dir}}"
    - "/var/log/hbase"

- name: Check if hbase log directory already exists
  stat: path={{hbase_dir}}/logs get_md5=False
  register: hbase_logs_dir

- name: Create hbase log symlink to /var/log/hbase if directory does not exist
  file: path={{hbase_dir}}/logs state=link src=/var/log/hbase
  when: not hbase_logs_dir.stat.exists

- name: Change the owner due to bug in unarchive above
  file: path="{{hbase_root_dir}}" owner="{{ hbase_user }}" group="{{ hbase_group }}" state=directory recurse=yes

- name: Detect if this is a systemd based system
  command: cat /proc/1/comm
  register: init
- set_fact: use_systemd=True
  when: init.stdout == 'systemd'
- set_fact: use_systemd=False
  when: init.stdout != 'systemd'

- name: Configure HBASE_MANAGES_ZK in conf/hbase-env.sh
  lineinfile: dest="{{ hbase_dir }}/conf/hbase-env.sh" regexp="^export HBASE_MANAGES_ZK=" line="export HBASE_MANAGES_ZK={{ hbase_manages_zk }}"
  when: hbase_env_set_manages_zk
  notify:
    - Restart Hbase


- name: Evaluate actual JAVA_HOME
  shell: readlink -f `which java`
  register: java_bin_path
- set_fact: REMOTE_JAVA_HOME={{java_bin_path.stdout | replace('/jre/bin/java','')}}

- name: Configure JAVA_HOME in conf/hbase-env.sh
  lineinfile: dest="{{ hbase_dir }}/conf/hbase-env.sh" regexp="^export JAVA_HOME=" line="export JAVA_HOME={{ REMOTE_JAVA_HOME or lookup('env','JAVA_HOME') }}"
  when: hbase_env_set_java_home
  notify:
    - Restart Hbase

- name: Configure hbase-site.xml
  template: dest="{{hbase_dir}}/conf/hbase-site.xml" owner={{hbase_user}} group={{hbase_group}} mode=644 src=hbase-site.xml.j2
  notify:
    - Restart Hbase


- name: Setup hbase upstart script
  template: dest={{hbase_upstart_conf}} owner=root group=root mode=644 src=hbase.conf
  notify:
    - Restart Hbase
  when: not use_systemd and use_upstart

- name: Setup hbase upstart service
  file: path=/etc/init.d/hbase state=link src={{hbase_upstart_conf}} owner=root group=root
  notify:
    - Restart Hbase
  when: not use_systemd and use_upstart


- name: Setup hbase init.d script
  template: src="hbase.initd.service" dest="/etc/init.d/hbase" owner=root group=root mode=0755
  notify:
    - Restart Hbase
  when: not use_systemd and use_initd

- name: Setup hbase init.d default
  template: src="hbase.initd.default" dest="/etc/default/hbase" owner=root group=root mode=644
  notify:
    - Restart Hbase
  when: not use_systemd and use_initd


- name: Setup hbase systemd script
  template: dest={{hbase_systemd_service}} owner=root group=root mode=644 src=hbase.service
  notify:
    - Restart Hbase
  when: use_systemd

- name: reload systemctl daemon
  command: systemctl daemon-reload
  when: use_systemd

- name: Unarchive phoenix
  unarchive:
    copy: no
    creates: "{{download_tmp_dir}}/{{phoenix_name}}-bin"
    dest: "{{download_tmp_dir}}"
    src: "{{ download_tmp_dir }}/{{ phoenix_tarball_name }}"
    owner: "{{ hbase_user }}"
    group: "{{ hbase_group }}"
  when: install_phoenix

- name: Copy query server and phoenix server jar
  copy:
    dest: "{hbase_current_dir}/lib"
    owner: "{{ hbase_user }}"
    group: "{{ hbase_group }}"
    mode: "u=rw,g=r,o=r"
    remote_src: true
    src: "{{download_tmp_dir}}/{{phoenix_name}}-bin/{{ item }}"
  with_items: "{{phoenix_server_jars}}"
  notify:
    - Restart Hbase
  when: install_phoenix

- meta: flush_handlers